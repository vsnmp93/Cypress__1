/// <reference types="cypress" />
import { messages } from "@cucumber/messages";
import DataTable from "./data_table";
import { IHookBody, IParameterTypeDefinition, IStepDefinitionBody } from "./types";
declare global {
    interface Window {
        testState: {
            gherkinDocument: messages.IGherkinDocument;
            pickles: messages.IPickle[];
            pickle: messages.IPickle;
        };
    }
}
export { resolve as resolvePreprocessorConfiguration } from "./preprocessor-configuration";
export { getStepDefinitionPaths } from "./step-definitions";
export { default as addCucumberPreprocessorPlugin } from "./add-cucumber-preprocessor-plugin";
export { NOT_FEATURE_ERROR } from "./methods";
export declare function isFeature(): void;
export declare function doesFeatureMatch(expression: string): void;
export declare function defineStep<T extends unknown[]>(description: string | RegExp, implementation: IStepDefinitionBody<T>): void;
export { defineStep as Given, defineStep as When, defineStep as Then, defineStep as And, defineStep as But, };
export declare function Step(world: Mocha.Context, text: string, argument?: DataTable | string): void;
export declare function defineParameterType<T>(options: IParameterTypeDefinition<T>): void;
export declare function attach(data: string | ArrayBuffer, mediaType?: string): void;
export declare function Before(options: {
    tags?: string;
}, fn: IHookBody): void;
export declare function Before(fn: IHookBody): void;
export declare function After(options: {
    tags?: string;
}, fn: IHookBody): void;
export declare function After(fn: IHookBody): void;
export { default as DataTable } from "./data_table";
