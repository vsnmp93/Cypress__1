"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveTestFiles = void 0;
const path_1 = __importDefault(require("path"));
const util_1 = __importDefault(require("util"));
const glob_1 = __importDefault(require("glob"));
const minimatch_1 = __importDefault(require("minimatch"));
const assertions_1 = require("./assertions");
const path_helpers_1 = require("./path-helpers");
const MINIMATCH_OPTIONS = { dot: true, matchBase: true };
function resolveTestFiles(configuration) {
    const { projectRoot, integrationFolder, fixturesFolder, supportFile, testFiles, ignoreTestFiles, } = configuration;
    const testFilesPatterns = [testFiles].flat();
    const ignoreTestFilesPatterns = [ignoreTestFiles].flat();
    (0, assertions_1.assertIsString)(integrationFolder, `Expected "integrationFolder" to be a string, got ${util_1.default.inspect(integrationFolder)}`);
    const globIgnore = [];
    if (supportFile) {
        globIgnore.push(supportFile);
    }
    if (fixturesFolder) {
        (0, assertions_1.assertIsString)(fixturesFolder, `Expected "fixturesFolder" to be a string or false, got ${util_1.default.inspect(fixturesFolder)}`);
        globIgnore.push(path_1.default.join(fixturesFolder, "**", "*"));
    }
    const globOptions = {
        sort: true,
        absolute: true,
        nodir: true,
        cwd: (0, path_helpers_1.ensureIsAbsolute)(projectRoot, integrationFolder),
        ignore: globIgnore.flat(),
    };
    return testFilesPatterns
        .flatMap((testFilesPattern) => glob_1.default.sync(testFilesPattern, globOptions))
        .filter((file) => ignoreTestFilesPatterns.every((ignoreTestFilesPattern) => !(0, minimatch_1.default)(file, ignoreTestFilesPattern, MINIMATCH_OPTIONS)));
}
exports.resolveTestFiles = resolveTestFiles;
