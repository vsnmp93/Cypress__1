/// <reference types="node" />
/**
 * This is obviously a non-exhaustive list.
 *
 * Definitions can found in https://github.com/cypress-io/cypress/blob/develop/cli/schema/cypress.schema.json.
 */
export interface ICypressConfiguration {
    projectRoot: string;
    integrationFolder: string;
    fixturesFolder: string | false;
    supportFile: string | false;
    testFiles: string | string[];
    ignoreTestFiles: string | string[];
}
export declare function findLastIndex<T>(collection: ArrayLike<T>, predicate: (value: T) => boolean, beforeIndex?: number): number;
export declare function traverseArgvMatching(argv: string[], name: string, allowEqual: boolean): Generator<string, void, unknown>;
export declare function combine<T>(...generators: Generator<T, unknown, unknown>[]): Generator<T, void, unknown>;
export declare function findArgumentValue(argv: string[], name: string, allowEqual: boolean): string | undefined;
export declare function toSnakeCase(value: string): string;
export declare function capitalize(word: string): string;
export declare function toCamelCase(value: string): string;
export declare function resolveConfiguration(options: {
    argv: string[];
    env: NodeJS.ProcessEnv;
    cwd: string;
}): ICypressConfiguration;
export declare function resolveEnvironment(options: {
    argv: string[];
    env: NodeJS.ProcessEnv;
    cwd: string;
}): Record<string, any>;
export declare function resolveConfigurationFile(options: {
    argv: string[];
}): string;
export declare function resolveProjectPath(options: {
    argv: string[];
    cwd: string;
}): string;
